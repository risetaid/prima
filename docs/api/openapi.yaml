openapi: 3.0.3
info:
  title: PRIMA Medical System API
  description: |
    API documentation for the PRIMA (Patient Reminder and Information Management Application) system.
    
    This API provides comprehensive patient management, reminder scheduling, content management,
    and WhatsApp integration for medical patient care coordination.
    
    ## Authentication
    All authenticated endpoints require a valid Clerk session token.
    Include the session token in the Authorization header:
    ```
    Authorization: Bearer <session_token>
    ```
    
    ## Response Format
    All API responses follow a standard format:
    ```json
    {
      "success": boolean,
      "data": object | null,
      "error": string | null,
      "code": string | null,
      "message": string | null,
      "timestamp": string (ISO 8601),
      "requestId": string (8 chars)
    }
    ```
    
    ## Rate Limiting
    API endpoints are rate-limited to prevent abuse. Limits vary by endpoint:
    - Authentication endpoints: 5 requests per 15 minutes per IP
    - Patient endpoints: 100 requests per minute per user
    - Webhook endpoints: 1000 requests per minute per endpoint
    
    ## Error Codes
    - `VALIDATION_ERROR`: Invalid input data
    - `UNAUTHORIZED`: Missing or invalid authentication
    - `FORBIDDEN`: Insufficient permissions
    - `NOT_FOUND`: Resource not found
    - `CONFLICT`: Resource conflict (e.g., duplicate)
    - `RATE_LIMIT_EXCEEDED`: Too many requests
    - `NETWORK_ERROR`: Network connectivity issue
    - `PARSE_ERROR`: Response parsing failure
    - `INTERNAL_ERROR`: Internal server error
    
  version: 1.0.0
  contact:
    name: PRIMA Development Team
  license:
    name: Proprietary

servers:
  - url: http://localhost:3000
    description: Local development server
  - url: https://prima.example.com
    description: Production server

tags:
  - name: Patients
    description: Patient management operations
  - name: Reminders
    description: Reminder scheduling and management
  - name: CMS
    description: Content management system operations
  - name: Admin
    description: Administrative operations
  - name: Webhooks
    description: Webhook integrations
  - name: Authentication
    description: Authentication and user management

components:
  securitySchemes:
    ClerkAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Clerk session token
  
  schemas:
    StandardResponse:
      type: object
      required:
        - success
        - timestamp
        - requestId
      properties:
        success:
          type: boolean
          description: Whether the request was successful
        data:
          type: object
          description: Response data (only present on success)
        error:
          type: string
          description: Error message (only present on failure)
        code:
          type: string
          description: Error code (only present on failure)
        message:
          type: string
          description: Optional message providing additional context
        timestamp:
          type: string
          format: date-time
          description: ISO 8601 timestamp of the response
        requestId:
          type: string
          description: Unique 8-character request identifier for tracking
    
    ValidationError:
      type: object
      required:
        - field
        - message
        - code
      properties:
        field:
          type: string
          description: The field that failed validation
        message:
          type: string
          description: Human-readable error message
        code:
          type: string
          description: Machine-readable error code
    
    Patient:
      type: object
      required:
        - id
        - name
        - phoneNumber
        - verificationStatus
        - isActive
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          description: Unique patient identifier
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: Patient's full name
        phoneNumber:
          type: string
          pattern: '^62[0-9]{9,13}$'
          description: Indonesian phone number (format: 62XXXXXXXXX)
        dateOfBirth:
          type: string
          format: date
          description: Patient's date of birth
        gender:
          type: string
          enum: [MALE, FEMALE, OTHER]
          description: Patient's gender
        address:
          type: string
          description: Patient's address
        medicalHistory:
          type: string
          description: Patient's medical history
        notes:
          type: string
          description: Additional notes about the patient
        verificationStatus:
          type: string
          enum: [PENDING, VERIFIED, FAILED, EXPIRED]
          description: WhatsApp verification status
        isActive:
          type: boolean
          description: Whether the patient is active
        createdBy:
          type: string
          description: User ID who created the patient record
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    
    Reminder:
      type: object
      required:
        - id
        - patientId
        - message
        - scheduledFor
        - status
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        patientId:
          type: string
          format: uuid
        message:
          type: string
          maxLength: 5000
        scheduledFor:
          type: string
          format: date-time
        status:
          type: string
          enum: [PENDING, SENT, DELIVERED, READ, FAILED, CANCELLED]
        sentAt:
          type: string
          format: date-time
        deliveredAt:
          type: string
          format: date-time
        readAt:
          type: string
          format: date-time
        recurrence:
          type: object
          properties:
            type:
              type: string
              enum: [NONE, DAILY, WEEKLY, MONTHLY]
            endDate:
              type: string
              format: date-time
        contentId:
          type: string
          format: uuid
          description: Optional linked content (article/video)
        createdBy:
          type: string
        createdAt:
          type: string
          format: date-time
    
    Article:
      type: object
      required:
        - id
        - title
        - slug
        - content
        - status
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          minLength: 1
          maxLength: 500
        slug:
          type: string
          pattern: '^[a-z0-9-]+$'
        excerpt:
          type: string
          maxLength: 1000
        content:
          type: string
        thumbnailUrl:
          type: string
          format: uri
        category:
          type: string
        tags:
          type: array
          items:
            type: string
        author:
          type: string
        status:
          type: string
          enum: [DRAFT, PUBLISHED, ARCHIVED]
        publishedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

paths:
  /api/patients:
    get:
      tags:
        - Patients
      summary: List all patients
      description: Retrieve a list of all patients with optional filtering
      security:
        - ClerkAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Patient'
    
    post:
      tags:
        - Patients
      summary: Create a new patient
      description: Create a new patient record
      security:
        - ClerkAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - phoneNumber
              properties:
                name:
                  type: string
                phoneNumber:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
                gender:
                  type: string
                  enum: [MALE, FEMALE, OTHER]
                address:
                  type: string
                medicalHistory:
                  type: string
                notes:
                  type: string
      responses:
        '201':
          description: Patient created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Patient'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      validationErrors:
                        type: array
                        items:
                          $ref: '#/components/schemas/ValidationError'

  /api/patients/{id}:
    get:
      tags:
        - Patients
      summary: Get patient by ID
      description: Retrieve a specific patient by their unique identifier
      security:
        - ClerkAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Patient'
        '404':
          description: Patient not found
    
    patch:
      tags:
        - Patients
      summary: Update patient
      description: Update an existing patient record
      security:
        - ClerkAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                phoneNumber:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
                gender:
                  type: string
                address:
                  type: string
                medicalHistory:
                  type: string
                notes:
                  type: string
      responses:
        '200':
          description: Patient updated successfully
        '404':
          description: Patient not found
    
    delete:
      tags:
        - Patients
      summary: Delete patient
      description: Delete a patient record (soft delete)
      security:
        - ClerkAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Patient deleted successfully
        '404':
          description: Patient not found

  /api/patients/{id}/reminders:
    get:
      tags:
        - Reminders
      summary: Get patient reminders
      description: Retrieve all reminders for a specific patient
      security:
        - ClerkAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [PENDING, SENT, DELIVERED, READ, FAILED, CANCELLED]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/StandardResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Reminder'
    
    post:
      tags:
        - Reminders
      summary: Create reminder
      description: Create a new reminder for a patient
      security:
        - ClerkAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message
                - scheduledFor
              properties:
                message:
                  type: string
                  maxLength: 5000
                scheduledFor:
                  type: string
                  format: date-time
                recurrence:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [DAILY, WEEKLY, MONTHLY]
                    endDate:
                      type: string
                      format: date-time
                contentId:
                  type: string
                  format: uuid
      responses:
        '201':
          description: Reminder created successfully
        '400':
          description: Validation error
        '404':
          description: Patient not found

  /api/webhooks/fonnte/incoming:
    post:
      tags:
        - Webhooks
      summary: Fonnte incoming message webhook
      description: Webhook endpoint for receiving incoming WhatsApp messages from Fonnte
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device:
                  type: string
                message:
                  type: string
                from:
                  type: string
                timestamp:
                  type: number
      responses:
        '200':
          description: Message processed successfully
        '401':
          description: Unauthorized webhook request
