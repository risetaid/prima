import { PrismaClient } from '../src/generated/prisma'

const prisma = new PrismaClient()

const defaultTemplates = [
  {
    templateName: "Pengingat Minum Obat Pagi",
    templateText: "üåÖ Selamat pagi {nama}!\n\nSaatnya minum obat {obat} dengan dosis {dosis}.\n\nJangan lupa minum air yang cukup ya! üíäüíß\n\nSemangat untuk hari ini! üí™",
    variables: ["{nama}", "{obat}", "{dosis}"],
    category: "REMINDER"
  },
  {
    templateName: "Pengingat Minum Obat Siang",
    templateText: "‚òÄÔ∏è Halo {nama}, sudah waktunya minum obat siang!\n\nObat: {obat}\nDosis: {dosis}\nWaktu: {waktu}\n\nJangan sampai terlewat ya! üïê",
    variables: ["{nama}", "{obat}", "{dosis}", "{waktu}"],
    category: "REMINDER"
  },
  {
    templateName: "Pengingat Minum Obat Malam",
    templateText: "üåô Selamat malam {nama}!\n\nWaktunya minum obat malam sebelum tidur:\n‚Ä¢ {obat} - {dosis}\n\nSetelah minum obat, istirahat yang cukup ya! üò¥\n\nSelamat malam dan mimpi indah! ‚ú®",
    variables: ["{nama}", "{obat}", "{dosis}"],
    category: "REMINDER"
  },
  {
    templateName: "Pengingat Kontrol Rutin",
    templateText: "üè• Halo {nama}, jangan lupa besok ada jadwal kontrol rutin!\n\nüìÖ Tanggal: {tanggal}\n‚è∞ Waktu: {waktu}\nüè• Tempat: {rumahSakit}\nüë®‚Äç‚öïÔ∏è Dokter: {dokter}\n\nJangan lupa bawa kartu berobat dan hasil lab terakhir ya!\n\nSemoga sehat selalu! üôè",
    variables: ["{nama}", "{tanggal}", "{waktu}", "{rumahSakit}", "{dokter}"],
    category: "APPOINTMENT"
  },
  {
    templateName: "Pengingat Konsultasi Khusus",
    templateText: "üìã Halo {nama}!\n\nReminser untuk konsultasi khusus:\nüìÖ {tanggal} pukul {waktu}\nüë®‚Äç‚öïÔ∏è Dengan {dokter}\nüè• Di {rumahSakit}\n\nSiapkan daftar keluhan dan pertanyaan yang ingin disampaikan ya!\n\nSemoga konsultasinya lancar! üíô",
    variables: ["{nama}", "{tanggal}", "{waktu}", "{dokter}", "{rumahSakit}"],
    category: "APPOINTMENT"
  },
  {
    templateName: "Tips Nutrisi Sehat",
    templateText: "ü•ó Halo {nama}!\n\nTips nutrisi hari ini:\n\n‚úÖ Konsumsi buah dan sayur minimal 5 porsi sehari\n‚úÖ Minum air putih minimal 8 gelas\n‚úÖ Kurangi makanan olahan dan tinggi garam\n‚úÖ Pilih protein rendah lemak\n\nNutrisi yang baik membantu proses penyembuhan!\n\nTetap semangat! üí™üå±",
    variables: ["{nama}"],
    category: "EDUCATIONAL"
  },
  {
    templateName: "Motivasi Semangat",
    templateText: "üí™ Halo {nama}!\n\nIngat bahwa setiap hari adalah kesempatan baru untuk menjadi lebih baik.\n\nKamu tidak sendirian dalam perjalanan ini. Kami di sini untuk mendukungmu! ü§ó\n\nTetap optimis dan jaga kesehatan ya!\n\nSalam hangat,\n{volunteer} üíô",
    variables: ["{nama}", "{volunteer}"],
    category: "EDUCATIONAL"
  },
  {
    templateName: "Pentingnya Istirahat Cukup",
    templateText: "üò¥ Halo {nama}!\n\nTahukah kamu? Tidur yang cukup (7-8 jam) sangat penting untuk:\n\nüõ°Ô∏è Meningkatkan sistem imun\nüß† Memulihkan fungsi otak\n‚ö° Mengembalikan energi tubuh\nüíä Membantu kerja obat-obatan\n\nYuk, jaga pola tidur yang teratur!\n\nSelamat beristirahat! üåô‚ú®",
    variables: ["{nama}"],
    category: "EDUCATIONAL"
  }
]

async function seedTemplates() {
  console.log('üå± Starting template seeding...')
  
  try {
    // Get the first admin user to be the creator
    const adminUser = await prisma.user.findFirst({
      where: { 
        role: 'ADMIN',
        isActive: true,
        isApproved: true 
      }
    })

    if (!adminUser) {
      console.error('‚ùå No admin user found! Please create an admin user first.')
      return
    }

    console.log(`üìù Found admin user: ${adminUser.email}`)

    // Check which templates already exist
    const existingTemplates = await prisma.whatsAppTemplate.findMany({
      select: { templateName: true }
    })
    
    const existingNames = existingTemplates.map(t => t.templateName)

    // Filter out templates that already exist
    const templatestoCreate = defaultTemplates.filter(
      template => !existingNames.includes(template.templateName)
    )

    if (templatestoCreate.length === 0) {
      console.log('‚úÖ All default templates already exist!')
      return
    }

    // Create templates
    const createdTemplates = await prisma.whatsAppTemplate.createMany({
      data: templatestoCreate.map(template => ({
        ...template,
        createdBy: adminUser.id
      }))
    })

    console.log(`‚úÖ Created ${createdTemplates.count} new templates:`)
    templatestoCreate.forEach(template => {
      console.log(`  - ${template.templateName} (${template.category})`)
    })

  } catch (error) {
    console.error('‚ùå Error seeding templates:', error)
  } finally {
    await prisma.$disconnect()
  }
}

seedTemplates()